---
- name: "Kuberentes configuration"
  hosts: localhost
  connection: local
  vars_files:
    - ../../vars.yaml
  vars:
    helm_chart_namespace: "{{ vars.all.vars.ssl_namespace }}"

  tasks:
    - name: Install community.kubernetes collection
      ansible.builtin.command:
        cmd: ansible-galaxy collection install community.kubernetes
      args:
        creates: ~/.ansible/collections/ansible_collections/community/kubernetes
    - name: Install openshift Python module
      ansible.builtin.pip:
        name: kubernetes
        state: present
        extra_args: "--break-system-packages"
    - name: Add stable Helm repository
      kubernetes.core.helm_repository:
        name: kubernetes-dashboard
        repo_url: https://kubernetes.github.io/dashboard/
    - name: Create Kubernetes Dashboard namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ helm_chart_namespace }}"
        state: present
    - name: Install Kubernetes Dashboard
      command: kubectl apply -f https://raw.githubusercontent.com/kubernetes/dashboard/v2.7.0/aio/deploy/recommended.yaml
    - name: Create Kubernetes ServiceAccount
      k8s:
        api_version: v1
        kind: ServiceAccount
        namespace: "{{ helm_chart_namespace }}"
        name: admin-user
    - name: Apply ClusterRoleBinding YAML
      command: kubectl apply -f kube_dasboard_role_binding.yaml
    - name: Create Kubernetes Secret
      command: kubectl apply -f kube_dasboard_role_secret.yaml
    - name: Create Kubernetes metal-lb service 
      command: kubectl apply -f lb.yaml
    - name: Get Secret information
      k8s_info:
        api_version: v1
        kind: Secret
        name: admin-user
        namespace: "{{ helm_chart_namespace }}"
      register: secret_info
    - name: Print decoded token value
      debug:
        msg: "{{ secret_info.resources[0].data.token | b64decode }}"