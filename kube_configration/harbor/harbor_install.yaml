---
- name: Install harbor Helm Chart
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../../vars.yaml

  vars:
    helm_chart_repo: harbor
    helm_chart_ref: harbor/harbor
    helm_chart_repo_url: https://helm.goharbor.io
    helm_chart_release_name: harbor
    helm_chart_namespace: "{{ vars.all.vars.harbor.namespace }}"

  tasks:
    # - name: Create data folder
    #   ansible.builtin.file:
    #     path: /other/harbor
    #     mode: u=rw,g=rw,o=rw
    #     state: directory
    # - name: Create data folder
    #   ansible.builtin.file:
    #     path: /var/lib/postgresql/data
    #     mode: u=rw,g=rw,o=rw
    #     state: directory
    - name: Print imported variables
      ansible.builtin.debug:
        var: vars.all.vars.harbor
    - name: Create namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ helm_chart_namespace }}"
        state: present
    - name: Add Helm chart repository
      community.kubernetes.helm_repository:
        name: "{{ helm_chart_repo }}"
        repo_url: "{{ helm_chart_repo_url }}"
    - name: PV data-harbor-redis-0
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: data-harbor-redis-0
          spec:
            capacity:
              storage: 1Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            storageClassName: local
            local:
              path: /var/lib/redis
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"
    - name: PV data-harbor-trivy-0
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: data-harbor-trivy-0
          spec:
            capacity:
              storage: 5Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            storageClassName: local
            local:
              path: /other/harbor
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"
    - name: PV database-data-harbor-database-0
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: database-data-harbor-database-0
          spec:
            capacity:
              storage: 2Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            storageClassName: local
            local:
              path: /var/lib/postgresql/data
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"
    - name: PV harbor-jobservice
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: harbor-jobservice
          spec:
            capacity:
              storage: 1Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            storageClassName: local
            local:
              path: /other/harbor
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"
    - name: PV harbor-registry
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: harbor-registry
          spec:
            capacity:
              storage: 8Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            storageClassName: local
            local:
              path: /other/harbor
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"
    - name: Install harbor Helm chart
      community.kubernetes.helm:
        release_name: "{{ helm_chart_release_name }}"
        chart_ref: "{{ helm_chart_ref }}"
        namespace: "{{ helm_chart_namespace }}"
        state: present
        wait: true
        release_values:
          logLevel: "debug"
          persistence:
            enabled: "false"
            resourcePolicy: ""
            persistentVolumeClaim:
              registry:
                storageClass: "local"
                size: 8Gi
              jobservice:
                jobLog:
                  storageClass: "local"
              database:
                storageClass: "local"
                size: 2Gi
              redis:
                storageClass: "local"
                size: 1Gi
              trivy:
                storageClass: "local"
          expose:
            type: loadBalancer
            ports:
              httpPort: 80
            tls:
              enabled: false
              auto:
                commonName: "harbor"
            loadBalancer:
              ip: "192.168.0.10"
          # harborAdminPassword: "{{ vars.all.vars.harbor.admin_password }}"
          externalURL: http://harbor
          chartmuseum:
            enabled: false
          clair:
            enabled: false
          notary:
            enabled: false
          trivy:
            enabled: false
            ignoreUnfixed: true
            insecure: true
          jobservice:
            jobLogger: stdout
