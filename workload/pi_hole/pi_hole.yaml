---
- name: Install Pi-hole Helm Chart
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../../vars.yaml
    - ./lists.yaml

  vars:
    helm_chart_repo: mojo2600
    helm_chart_repo_url: https://mojo2600.github.io/pihole-kubernetes/
    helm_chart_ref: mojo2600/pihole
    helm_chart_release_name: pihole
    helm_chart_namespace: "{{ vars.all.vars.pi_hole.namespace }}"
    serviceWebIP: "{{ vars.all.vars.pi_hole.serviceWebIP }}"
    serviceDnsIP: "{{ vars.all.vars.pi_hole.serviceDnsIP }}"

  tasks:
    - name: Print imported variables
      ansible.builtin.debug:
        var: vars.all.vars.pi_hole

    - name: Create namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ helm_chart_namespace }}"
        state: present

    - name: Add Helm chart repository
      community.kubernetes.helm_repository:
        name: "{{ helm_chart_repo }}"
        repo_url: "{{ helm_chart_repo_url }}"

    - name: PV data-pihole
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: pihole
            namespace: "{{ helm_chart_namespace }}"
          spec:
            capacity:
              storage: 5Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            local:
              path: /var/lib/pihole
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"

    - name: Install pi-hole Helm chart
      community.kubernetes.helm:
        name: "{{ helm_chart_release_name }}"
        chart_ref: "{{ helm_chart_ref }}"
        namespace: "{{ helm_chart_namespace }}"
        state: present
        wait: true
        update_repo_cache: true
        release_values:
          replicaCount: 2
          image:
            tag: "latest"
          adlists: "{{ adlists }}"
          whitelist: "{{ whitelist }}"
          adminPassword: "{{ vars.all.vars.pi_hole.password }}"
          persistentVolumeClaim:
            enabled: true
            size: 5Gi
          extraEnvVars:
            DNSMASQ_USER: "root"
            CACHE_SIZE: "10000"
            DNS_FQDN_REQUIRED: "false"
            DNS_BOGUS_PRIV: "false"
            DNSSEC: "false"
            CONDITIONAL_FORWARDING: "false"
            PIHOLE_DNS_1: "8.8.8.8"
            PIHOLE_DNS_2: "1.1.1.1"
            QUERY_LOGGING: "false"
            INSTALL_WEB_INTERFACE: "true"
            INSTALL_WEB_SERVER: "true"
            LIGHTTPD_ENABLED: "true"
            BLOCKING_ENABLED: "true"
            WEB_PORT: "80"
            FTLCONF_MAXDBDAYS: "7"
            FTLCONF_DBIMPORT: "yes"
            FTLCONF_MAXLOGAGE: "24.0"
            FTLCONF_PRIVACYLEVEL: "0"
            FTLCONF_IGNORE_LOCALHOST: "no"
            FTLCONF_AAAA_QUERY_ANALYSIS: "yes"
            FTLCONF_ANALYZE_ONLY_A_AND_AAAA: "false"
            FTLCONF_DBFILE: "/etc/pihole/pihole-FTL.db"
            FTLCONF_LOGFILE: "/var/log/pihole-FTL.log"
            FTLCONF_PIDFILE: "/var/run/pihole-FTL.pid"
            FTLCONF_PORTFILE: "/var/run/pihole-FTL.port"
            FTLCONF_SOCKETFILE: "/var/run/pihole/FTL.sock"
            FTLCONF_SETUPVARSFILE: "/etc/pihole/setupVars.conf"
            FTLCONF_MACVENDORDB: "/etc/pihole/macvendor.db"
            FTLCONF_GRAVITYDB: "/etc/pihole/gravity.db"
          podDnsConfig:
            enabled: true
            policy: "None"
            nameservers:
            - 127.0.0.1
            - 8.8.8.8
            - 1.1.1.1
          resources:
            limits:
              cpu: 2000m
              memory: 4Gi
            requests:
              cpu: 500m
              memory: 1Gi

    - name: Deploy pi-hole DNS MetaLB
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: pi-hole-dns-metal-lb
            namespace: "{{ helm_chart_namespace }}"
          spec:
            selector:
              app: pihole
            ports:
              - name: dns-tcp
                protocol: TCP
                port: 53
                targetPort: 53
              - name: dns-udp
                protocol: UDP
                port: 53
                targetPort: 53
            type: LoadBalancer
            loadBalancerIP: "{{ serviceDnsIP }}"
    - name: Deploy pi-hole WEB MetaLB
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: pi-hole-web-metal-lb
            namespace: "{{ helm_chart_namespace }}"
          spec:
            selector:
              app: pihole
            ports:
              - protocol: TCP
                port: 80
                targetPort: 80
            type: LoadBalancer
            loadBalancerIP: "{{ serviceWebIP }}"