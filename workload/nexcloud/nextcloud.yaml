---
- name: Install harbor Helm Chart
  hosts: localhost
  gather_facts: false

  vars_files:
    - ../../vars.yaml

  vars:
    helm_chart_repo: nextcloud
    helm_chart_repo_url: https://nextcloud.github.io/helm/
    helm_chart_ref: nextcloud/nextcloud
    helm_chart_release_name: nextcloud
    helm_chart_namespace: "{{ vars.all.vars.nextcloud.namespace }}"
    intermediate_version: "6.5.2"
  tasks:
    - name: Print imported variables
      ansible.builtin.debug:
        var: vars.all.vars.nextcloud
    - name: Create namespace
      kubernetes.core.k8s:
        api_version: v1
        kind: Namespace
        name: "{{ helm_chart_namespace }}"
        state: present
    - name: Add Helm chart repository
      community.kubernetes.helm_repository:
        name: "{{ helm_chart_repo }}"
        repo_url: "{{ helm_chart_repo_url }}"
    - name: Create local directory for Nextcloud
      ansible.builtin.file:
        path: /other_hdd/nextcloud
        state: directory
        mode: '0777'
    - name: Create a PV object for the Nextcloud data
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: nextcloud-data
            namespace: "{{ helm_chart_namespace }}"
          spec:
            capacity:
              storage: "{{ vars.all.vars.nextcloud.volume_size }}"
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            persistentVolumeReclaimPolicy: Retain
            storageClassName: local-storage
            local:
              path: /other_hdd/nextcloud
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon"
    - name: Create a PVC object for the Nextcloud data
      kubernetes.core.k8s:
        state: present
        definition:
          api_version: v1
          kind: PersistentVolumeClaim
          metadata:
            name: nextcloud-data-claim
            namespace: "{{ helm_chart_namespace }}"
          spec:
            storageClassName: local-storage
            accessModes:
              - ReadWriteOnce
            resources:
              requests:
                storage: "{{ vars.all.vars.nextcloud.volume_size }}"
    - name: Install nexcloud Helm chart
      community.kubernetes.helm:
        name: "{{ helm_chart_release_name }}"
        chart_ref: "{{ helm_chart_ref }}"
        namespace: "{{ helm_chart_namespace }}"
        state: present
        wait: true
        release_values:
          persistence:
            enabled: true
            accessMode: ReadWriteOnce
            existingClaim: nextcloud-data-claim
          nextcloud:
            password: "{{ vars.all.vars.nextcloud.password }}"
            username: dante
            trustedDomains: ["{{ vars.all.vars.nextcloud.loadBalancerIP }}"]
          metrics:
            enabled: false
          externalDatabase:
            enabled: true
            type: postgresql
            host: nextcloud-db.nextcloud.svc.cluster.local
            database: nextcloud
            existingSecret:
              enabled: true
              secretName: postgres.nextcloud-db.credentials.postgresql.acid.zalan.do
              passwordKey: password
              usernameKey: username
            sslmode: disable
          internalDatabase:
            enabled: false
          livenessProbe:
            failureThreshold: 100
        chart_version: "{{ intermediate_version }}"
    - name: Create Samba Service
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: nextcloud-service
            namespace: "{{ helm_chart_namespace }}"
          spec:
            selector:
              app.kubernetes.io/name: nextcloud
            ports:
              - name: nextcloud
                protocol: TCP
                port: 80
                targetPort: 80
            type: LoadBalancer
            loadBalancerIP: "{{ vars.all.vars.nextcloud.loadBalancerIP }}"
