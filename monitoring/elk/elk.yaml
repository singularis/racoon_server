---
- name: Install ELK Operator from OperatorHub.io
  hosts: gpu_nodes
  become: no

  vars_files:
    - ../../vars.yaml


  vars:
    elk_namespace: "{{ vars.all.vars.elk.namespace }}"
    loadBalancerIP: "{{ vars.all.vars.elk.loadBalancerIP }}"
    password: "{{ vars.all.vars.elk.password }}"
  tasks:
    - name: Create Namespace for Prometheus Operator
      kubernetes.core.k8s:
        name: "{{ elk_namespace }}"
        api_version: v1
        kind: Namespace
        state: present
    - name: Apply ELK Operator manifest
      shell: kubectl apply -f https://operatorhub.io/install/elastic-cloud-eck.yaml
    - name: Deploy Elasticsearch
      kubernetes.core.k8s:
        state: present
        namespace: "{{ elk_namespace }}"
        definition:
          apiVersion: elasticsearch.k8s.elastic.co/v1
          kind: Elasticsearch
          metadata:
            name: elasticsearch
          spec:
            version: 8.12.0
            nodeSets:
              - name: default
                count: 1
                config:
                  node.store.allow_mmap: false
                  xpack.security.enabled: true
                  xpack.security.authc.anonymous.username: anonymous_user
                  xpack.security.authc.anonymous.roles: superuser
                  xpack.security.authc.anonymous.authz_exception: true
                podTemplate:
                  spec:
                    nodeSelector:
                      kubernetes.io/hostname: racoon-gpu
                    containers:
                    - name: elasticsearch
                      resources:
                        limits:
                          memory: 6Gi
                          cpu: 1
                        requests:
                          memory: 6Gi
                          cpu: 1
    - name: Ensure /other_hdd/elk directory exists
      become: yes
      vars:
        ansible_become_pass: "{{ all.vars.worker_node.ansible_become_pass }}"
      ansible.builtin.file:
        path: /other_hdd/elk
        state: directory
        mode: '0755'
    - name: Create Persistent Volume
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: elk-pv
            namespace: "{{ elk_namespace }}"
          spec:
            capacity:
              storage: 2Gi
            volumeMode: Filesystem
            accessModes:
              - ReadWriteOnce
            persistentVolumeReclaimPolicy: Recycle
            local:
              path: /other_hdd/elk
            nodeAffinity:
              required:
                nodeSelectorTerms:
                  - matchExpressions:
                      - key: kubernetes.io/hostname
                        operator: In
                        values:
                          - "racoon-gpu"
    - name: Deploy Kibana
      kubernetes.core.k8s:
        state: present
        namespace: "{{ elk_namespace }}"
        definition:
          apiVersion: kibana.k8s.elastic.co/v1
          kind: Kibana
          metadata:
            name: kibana
          spec:
            version: 8.12.0
            count: 1
            elasticsearchRef:
              name: elasticsearch
            podTemplate:
              spec:
                nodeSelector:
                  kubernetes.io/hostname: racoon-gpu
                containers:
                - name: kibana
                  livenessProbe: null
                  readinessProbe:
                    httpGet:
                      path: /api/status
                      port: 5601
                      scheme: HTTPS
                    initialDelaySeconds: 30
                    periodSeconds: 10
                    timeoutSeconds: 5
                    failureThreshold: 3
            config:
              xpack.security.enabled: true
              xpack.security.authc.providers:
                anonymous.anonymous1:
                  order: 0
                  credentials: "elasticsearch_anonymous_user"
    - name: Deploy Kibana MetaLB
      kubernetes.core.k8s:
        state: present
        definition:
          apiVersion: v1
          kind: Service
          metadata:
            name: kibana-metal-lb
            namespace: "{{ elk_namespace }}"
          spec:
            selector:
              kibana.k8s.elastic.co/name: kibana
            ports:
              - protocol: TCP
                port: 5601
                targetPort: 5601
            type: LoadBalancer
            loadBalancerIP: 192.168.0.17